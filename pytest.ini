[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
pythonpath = . src
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=95
markers =
    unit: Unit tests
    integration: Integration tests
    acceptance: Acceptance/BDD tests
    slow: Slow running tests
    brittle_critical: marks tests as critically brittle (will definitely break during refactoring)
    brittle_likely: marks tests as likely brittle (will probably break during refactoring)
    brittle_possible: marks tests as possibly brittle (may break during refactoring)
    refactoring_target_multi_page: marks tests that test multi-page scraper architecture
    refactoring_target_ai_pipeline: marks tests that test AI enhancement pipeline
    refactoring_target_flask_app: marks tests that test Flask application structure
    refactoring_target_format_selection: marks tests that test format selection logic
    safe_for_refactoring: marks tests as safe during refactoring (behavior-focused)
    characterization: marks tests as characterization tests (document current behavior)
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning